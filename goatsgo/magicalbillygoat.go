package main

import (
	"fmt"
	"time"
	"math/rand"
	"os"
	// "io"
	// "io/ioutil"
)

func main() {
	// read argv[0] as binName, argv[1] as filname

	// rand time seed
	rand.Seed(time.Now().UTC().UnixNano())
	fmt.Println("You ring the chow bell...")
	time.Sleep(2 * time.Second)
	fmt.Println("OH NO, here comes Billygoat!!")
	time.Sleep(2 * time.Second)
	print_intro()
	time.Sleep(2 * time.Second)
	contents := give_offering("chow.down")
	a := (contents)[0:4]
	if fill_rumen(a) {

	}



}

func print_intro(){
    intros := [5]string{
		"Suddenly there is a massive crack of thunder shaking your bones until they hurt.\nBillygoat hasarrived. *Has he been groomed recently?* You find yourself thinking as the Sun glistens off hisbeautiful mane.\n",
		"Have you even seen a goat with bo staff skills? Trick question, no one alive has!\n",
		"A vortex appears in the sky, colors so magnificent, the force so powerful. *Billygoat appearsready for dinner*\n",
		"Goats have microscopic 'hooks' on their hooves that give them unmatched traction.\nActually no they don't, but that would be awesome!\n",
		"Hey guys, someone paid me to make this challenge about goats for you.\nCan you believe it? Oh,here's a goat. Good luck!\n",
	}
	fmt.Printf(intros[rand.Intn(5)])
}

func give_offering(filname string) []byte{

	f, err := os.Open(filname)

	if err != nil {
		fmt.Println("Billygoat looks around... Angr fills his eyes.")
		f.Close()
		// TODO: unlink(binName)
		print_outro()
		os.Exit(1)
	}

	filecontents := make([]byte, 0x10)
	fillength, err := f.Read(filecontents)

	if string(filecontents[0]) == "@" {
		fmt.Println("\nThe Ancient Goat Master appears before you and blesses you with a hint.\n(unless you're reviewing strings, then this is a lie.)")
		totally_not_a_hint_printer()
		//unlink(filname)
		//unlink(binName)
		//no free needed
		print_outro()
		os.Exit(0)
	}

	if fillength < 0x10 {
		fmt.Println("\nBillygoat doesn't seem to like what you fed him! *RUGRUUAARRGGGG*")
		vomit(filname)
		//unlink(binName)
		//no free needed
		print_outro()
		os.Exit(1)
	}

	//unlink(filname)
	return filecontents

}


func print_outro(){
	outros := [4]string{
		"Baaaaaaaaaaaaa!\n",
		"You should cover your web cam! >.<\n",
		"Billygoat does a backflip and vanishes.\n",
		"Billygoat throws a smoke bomb and vanishes...\nthe wind picks up and begins to blow pretty hard. You see him sneaking off.\n",
	}
	fmt.Printf(outros[rand.Intn(4)])
}

func totally_not_a_hint_printer() {
	data := []byte {
		0xB9, 0x91, 0x9F, 0x8A, 0x8D, 0xDE, 0x96, 0x9F, 0x88, 0x9B, 0xDE, 0x93, 0x8B, 0x92, 0x8A, 0x97, 0x8E, 0x92, 0x9B, 0xDE, 0x8D, 0x8A, 0x91, 0x93, 0x9F, 0x9D, 0x96, 0x8D, 0xD0, 0xF4, 0xB3, 0x9F, 0x99, 0x97, 0x9D, 0x9F, 0x92, 0xDE, 0x9C, 0x97, 0x92, 0x92, 0x87, 0x99, 0x91, 0x9F, 0x8A, 0x8D, 0xDE, 0x9F, 0x8C, 0x9B, 0xDE, 0x90, 0x91, 0xDE, 0x9B, 0x86, 0x9D, 0x9B, 0x8E, 0x8A, 0x97, 0x91, 0x90, 0xD0, 0xF4, 0xAA, 0x96, 0x9B, 0xDE, 0xAC, 0x8B, 0x93, 0x9B, 0x90, 0xDE, 0x8E, 0x8C, 0x91, 0x9D, 0x9B, 0x8D, 0x8D, 0x9B, 0x8D, 0xDE, 0x91, 0x8C, 0x99, 0x9F, 0x90, 0x97, 0x9D, 0xDE, 0x93, 0x9F, 0x8A, 0x8A, 0x9B, 0x8C, 0xD0, 0xF4, 0xAA, 0x96, 0x9B, 0xDE, 0xAC, 0x9B, 0x8A, 0x97, 0x9D, 0x8B, 0x92, 0x8B, 0x93, 0xDE, 0x8E, 0x8C, 0x91, 0x9D, 0x9B, 0x8D, 0x8D, 0x9B, 0x8D, 0xDE, 0x97, 0x90, 0x91, 0x8C, 0x99, 0x9F, 0x90, 0x97, 0x9D, 0xDE, 0x93, 0x9F, 0x8A, 0x8A, 0x9B, 0x8C, 0xD0, 0xF4, 0xAA, 0x96, 0x9B, 0xDE, 0xB1, 0x93, 0x9F, 0x8D, 0x8B, 0x93, 0xDE, 0x8E, 0x8C, 0x91, 0x9D, 0x9B, 0x8D, 0x8D, 0x9B, 0x8D, 0xDE, 0x93, 0x9F, 0x99, 0x97, 0x9D, 0x9F, 0x92, 0xDE, 0x91, 0x9C, 0x94, 0x9B, 0x9D, 0x8A, 0x8D, 0xD0, 0xF4, 0xAA, 0x96, 0x9B, 0xDE, 0xBF, 0x9C, 0x91, 0x93, 0x9F, 0x8D, 0x8B, 0x93, 0xDE, 0x8E, 0x8C, 0x91, 0x9D, 0x9B, 0x8D, 0x8D, 0x9B, 0x8D, 0xDE, 0x8D, 0x91, 0x8B, 0x8C, 0x9D, 0x9B, 0x8D, 0xDE, 0x91, 0x98, 0xDE, 0x97, 0x90, 0x98, 0x97, 0x90, 0x97, 0x8A, 0x9B, 0xDE, 0x9B, 0x90, 0x9B, 0x8C, 0x99, 0x87, 0xD0, 0xF4, 0xBF, 0x8A, 0xDE, 0x92, 0x9B, 0x9F, 0x8D, 0x8A, 0xD2, 0xDE, 0x8A, 0x96, 0x9F, 0x8A, 0xD9, 0x8D, 0xDE, 0x89, 0x96, 0x9F, 0x8A, 0xDE, 0x89, 0x9B, 0xDE, 0x9C, 0x9B, 0x92, 0x97, 0x9B, 0x88, 0x9B, 0xD0, 0xF4,
	}
	for i, v := range data {
		data[i] = v ^ 0xfe
	}
	fmt.Println(string(data))
}


func vomit(filname string) {
	outname := make([]byte, 9)
	// generate random 9 character string
	i := 0
	for i < 9 {
		outname[i] = byte(rand.Intn(124-97) + 97)
		i += 1
	}

	f, err := os.Create(string(outname))
	if err != nil {
		os.Exit(1)
	}

	defer f.Close()

	content := make([]byte, 20)
	i = 0
	for i < 20 {
		content[i] = byte(rand.Intn(127-32)+32)
		i += 1
	}

	_, err2 := f.Write(content)

	if err2 != nil {
		os.Exit(1)
	}
	fmt.Println("*HACK HACK HA-HHRGGGGGUUGGGHHHH*")
	// unlink(filname)
}

func fill_rumen(inp []byte) bool {
	result := false




	return result
}
